function getId(id){
    return document.getElementById(id);
}

function display (obj,prop) {
    obj.style.display = prop; 
}

let content = getId('content');
display(content,'none');



let loader = getId('loader');

window.onload = function(){
    display(loader,'none');
    display(content,'block');
}

let beforeTime = getId('beforeTime');
let instTime = getId('beforeTimeInst');
let duringTime = getId('duringTime');
let afterTime = getId('afterTime');
let toaster = getId('toast');
let footer = getId('footer');

display(beforeTime,'none');
display(instTime,'none');
display(duringTime,'none');
display(afterTime,'none');
display(toaster,'none');
display(footer,'none');

let timer = getId('timer');
display(timer,'none');
let timer2 = getId('timer2');
let setTimer = getId('secTimer');

// https://docs.google.com/forms/d/e/1FAIpQLScEwKfly0A7rggB6FmUqsVur7cWafn979b3aaH3pIDrmxyoyw/viewform?usp=sf_link
formlink = "https://docs.google.com/forms/d/e/1FAIpQLScEwKfly0A7rggB6FmUqsVur7cWafn979b3aaH3pIDrmxyoyw/viewform?embedded=true";
startDate = "Mar 27,2022 22:00:00";

let frame = getId('form');
frame.setAttribute("src",formlink);

startTime = new Date(startDate).getTime(); //in millisec //paper start

durationOfExam = 45 //in minutes

endTime = startTime + durationOfExam*60*1000; //in millisec //paper end

Extra15Sec = endTime + 15*1000; //15 section for submission

instructionTimeBeforeStart = 1 //in minutes

instructionTime = startTime - instructionTimeBeforeStart*60*1000; //show instruction

currentTime = new Date().getTime(); //in millisec

if(currentTime >= instructionTime && currentTime < startTime){
    instructionStart();
}else if(currentTime >= startTime && currentTime <= Extra15Sec){
    duringStart();
}else if(currentTime >= Extra15Sec){
    display(footer,'block')
    display(afterTime,'block');
}else if(currentTime < instructionTime){ //else
    display(beforeTime,'block');
    display(footer,'block');
    var beforeInstructionInterval = setInterval(beforeInstruction,1000); //beginning Timer
}

function onScreen(obj,text){
    obj.innerHTML = text;
}

function getTime(distance){
    let days = Math.floor(distance / (1000 * 60 * 60 * 24));
    let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    let seconds = Math.floor((distance % (1000 * 60)) / 1000);
    return {days:days,hours:hours,minutes:minutes,seconds:seconds};
}

function beforeInstruction(){
    let now = new Date().getTime();
    let distance = instructionTime - now;
    let time = getTime(distance);
    let days = time.days;
    let hours = time.hours;
    let minutes = time.minutes;
    let seconds = time.seconds;
    if(distance<=0){
        clearInterval(beforeInstructionInterval);
        display(beforeTime,'none');
        instructionStart();
    }else{
        let text = `${days}d, ${hours}h, ${minutes}m, ${seconds}s`;
        onScreen(timer2,text);
    }
}

function instructionStart(){
    display(instTime,'block');
    display(footer,'block');
    display(timer,'block');
    let now = new Date().getTime();
    let barWidth = ((startTime - now)*100)/(startTime - instructionTime);
    let progressBar = getId('progress-bar');
    progressBar.style.width = barWidth + "%";
    progressBar.classList.add("bg-warning");
    var instructionTimeInterval = setInterval(function(){
        let now = new Date().getTime();
        let distance = startTime - now;
        let time = getTime(distance);
        let minutes = time.minutes;
        let seconds = time.seconds;
        barWidth = ((distance)*100)/(startTime - instructionTime);
        let progressBar = getId('progress-bar');
        progressBar.style.width = barWidth + "%";
        if(distance<=0){
            clearInterval(instructionTimeInterval);
            display(instTime,'none');
            duringStart();
        }else{
            let text = `Starts in: ${minutes}m, ${seconds}s`;
            onScreen(timer,text);
        }
    },1000);
}


function duringStart(){
    display(duringTime,'block');
    display(footer,'none');
    display(timer,'block');
    let now = new Date().getTime();
    let barWidth = ((endTime - now)*100)/(endTime - startTime);
    var durationTimeInterval = setInterval(function(){
        let now = new Date().getTime();
        let distance = endTime - now;
        let time = getTime(distance);
        let minutes = time.minutes;
        let seconds = time.seconds;
        barWidth = ((distance)*100)/(endTime - startTime);
        let progressBar = getId('progress-bar');
        progressBar.classList.remove("bg-warning");
         if(barWidth > 66.66){
            progressBar.classList.add("bg-success");
         }else if(barWidth <= 66.66 && barWidth >= 33.33){
            progressBar.classList.remove("bg-success");
            progressBar.classList.add("bg-warning");
         }else if(barWidth <= 33.33){
            progressBar.classList.remove("bg-warning");
            progressBar.classList.add("bg-danger");
         }
        progressBar.style.width = barWidth + "%";
        if(distance<=0){
            if(now > endTime && now < Extra15Sec){
                display(toaster,'block');
            }
            clearInterval(durationTimeInterval);
            let timer15sec = setInterval(function(){
                let now = new Date().getTime();
                let distance = Extra15Sec - now;
                let time = getTime(distance);
                let minutes = time.minutes;
                let seconds = time.seconds;
                if(distance<=0){
                    clearInterval(timer15sec);
                    display(toaster,'none');
                    display(duringTime,'none');
                    display(footer,'block');
                    display(afterTime,'block');
                    display(timer,'none');
                }else{
                    let text = `${seconds}s`;
                    onScreen(setTimer,text);
                }
            },1000);
        }else{
            let text = `Time Left: ${minutes}m, ${seconds}s`;
            onScreen(timer,text);
        }
    },1000);
}
